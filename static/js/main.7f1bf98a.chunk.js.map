{"version":3,"sources":["redux/actions/tools.js","components/Popup.js","components/Searchlist.js","components/chasheet/Simple.js","pages/tools/myarmy/MyArmyListItem.js","pages/tools/myarmy/MyArmyList.js","components/dice.js","pages/tools/myarmy/MyArmyFooter.js","components/api/fetch.js","pages/tools/myarmy/MyArmy.js","components/search/ReverseSearch.js","pages/tools/encounter/GroupItem.js","pages/tools/encounter/Group.js","pages/tools/encounter/VsItem.js","pages/tools/encounter/VsList.js","assets/img/monster_background.jpg","components/chasheet/BeastSimple.js","pages/tools/encounter/ChooseList.js","pages/tools/encounter/EncounterMaker.js","components/chasheet/BeastFull.js","pages/class/druid/Random.js","pages/class/druid/WildShape.js","pages/monsters/Single.js","pages/monsters/components/AllListItem.js","pages/monsters/components/AllList.js","pages/monsters/All.js","App.js","reportWebVitals.js","layout/NavList.js","layout/NavMobile.js","layout/links.js","layout/NavWindow.js","layout/Nav.js","redux/reducers/index.js","redux/reducers/tools.js","index.js","redux/state.js"],"names":["UpdateHealth","$id","$add","type","pl","encounterAddGroupMember","level","no","cr","encounterGroupUpdateMemberNo","plus","encounterVSUpdateMemberNo","Popup","props","Dialog","onClose","close","open","title","DialogTitle","style","textAlign","children","Searchlist","OGitems","items","useState","setitems","handleCallback","$item","callback","List","TextField","onChange","e","cpy","search","target","value","filtered","filter","item","name","toLowerCase","startsWith","placeholder","InputProps","startAdornment","InputAdornment","position","length","map","ListItem","button","retData","id","onClick","simple","char","getAttrValue","$x","v","Math","floor","className","Object","entries","ability_score","key","class","size","align","hp","ac","challenge","borderBottom","perception","speed","damage_resistance","resistant","i","immunity","condition_immunity","ability","MyArmyListItem","dispatch","useDispatch","data","pdata","hp_max","base","curr","setHP","ListItemText","primary","ButtonGroup","Button","disabled","MyArmyList","list","alist","Divider","dice","$st","$obj","$mod","bonus","saving_throw","attr","this","attrToBonus","rollWithMod","$roll","random","$str","rollDmg","dices","strToRoll","ret","j","rollDice","strToBonus","$bonus","roll","d2","d","rollToHit","hit","dmg","die","$param","$defaultAttack","r","attacks","damage","count","getLowRoll","getHighRoll","roll_bonus","push","AttackToFriendly","minus","split","index","indexOf","MyArmyFooter","army","useSelector","state","tools","myarmy","rollAllRoll","useRef","rollAllMod","pop","setpop","rolled","setRolled","minWidth","Array","isArray","display","marginRight","marginLeft","bottom","left","right","FormControl","fullWidth","sx","m","InputLabel","Select","labelId","defaultValue","inputRef","MenuItem","variant","color","current","mod","selected","attk","rollForAttack","rollSavingThrow","console","log","api","$link","$payload","params","mode","link","connectString","$callback","fetch","then","response","json","responseJson","eno","$pl","includes","strParams","$params","slice","MyArmy","actionSelect","showPop","setShowPop","showMPop","setShowMPop","montsers","setmonters","setchar","handlegetMonstersCallback","$data","handleShowChar","getCharAction","actions","multiattack","maid","ma","mas","multieAttackToFriendly","low","high","k","a","action","get","htmlFor","inputProps","as","ind","parseInt","hp_base","rollHealth","uuid","ReverseSearch","width","GroupItem","TableRow","TableCell","Group","group","encounter","npcBtn","setnpcBtn","pets","setpets","closePop","addNoPlayer","AddLevel","handleNPCBtnCheck","margin","Grid","container","padding","TableContainer","Table","TableHead","icon","faSkull","TableBody","l","li","colSpan","zeroMinWidth","Paper","maxWidth","paddingRight","Accordion","AccordionSummary","expandIcon","ExpandMore","AccordionDetails","VsItem","VsList","vs","gcr","vcr","difficulty","setdifficulty","useEffect","updateDifficulty","marginTop","Simple","backgroundImage","BKimg","marginBottom","ListItemSecondaryAction","getMultieAttackLowRoll","getMultieAttackHighRoll","ChooseList","plimt","monsters","setMonsters","monster","setMonster","OGmonsters","setOGMonsters","limit","setlimit","mimit","setmimit","handleSetMonsters","ignorecrzero","showVs","$name","ChevronLeft","ChevronRight","EncounterMaker","spacing","Full","desc","Random","ws","setws","loading","setLoading","handleRandomResponse","WildShape","useParams","Single","history","useHistory","monsterData","setMonsterData","handleMonsterData","AllListItem","AllList","All","mall","setMall","OGmall","setOGMall","load","setload","sText","handleMallData","API","text","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","useStyles","makeStyles","theme","accordion","boxShadow","border","summary","NavList","classes","links","href","replace","drawer","flexShrink","drawerPaper","NavMobile","Home","Class","Druid","Random_Wildshape","Monsters","Search","Tools","Encounter_Maker","setdrawer","toggleDrawer","Toolbar","Typography","IconButton","edge","Menu","SwipeableDrawer","anchor","paper","NavWindow","Nav","window","innerWidth","setWidth","handleWindowResize","addEventListener","AppBar","allReducers","combineReducers","groups","crp","parseFloat","splice","stateBase","localStorage","setItem","JSON","stringify","defaultState","parse","getItem","getState","createTheme","palette","main","secondary","store","createStore","persist","__REDUX_DEVTOOLS_EXTENSION__","subscribe","setState","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.7f1bf98a.chunk.js","sourcesContent":["function setMyArmy($arr) {\n    return {\n        type:'SET_MYARMY',\n        pl:$arr,\n    }\n}\n\nfunction addMyArmy($cadet) {\n    return {\n        type:'ADD_MYARMY',\n        pl:$cadet,\n    }   \n}\n\nfunction UpdateHealth($id,$add) {\n    return ($add)? \n        {\n            type:'ARMY_IND_PLUS_HEALTH',\n            pl:$id,\n        } : {\n            type:'ARMY_IND_MINUS_HEALTH',\n            pl:$id,\n        };\n}\n\nfunction encounterAddGroupMember(type,level,no,cr){\n    return {\n        type: 'ENCOUNTER_ADD_GROUP',\n        pl: {type,level,no,cr}\n    }\n}\n\nfunction encounterGroupUpdateMemberNo(type,level,plus=1)\n{\n    return {\n        type:((plus)?'ENCOUNTER_GROUP_CHANGE_ADD_NO':'ENCOUNTER_GROUP_CHANGE_MINUS_NO'),\n        pl: { type,level}\n    }\n}\n\nfunction encounterAddVs(type,no,cr){\n    return {\n        type: 'ENCOUNTER_ADD_VS',\n        pl: {type,no,cr}\n    }\n}\nfunction encounterVSUpdateMemberNo(type,plus=1)\n{\n    return {\n        type:((plus)?'ENCOUNTER_VS_CHANGE_ADD_NO':'ENCOUNTER_VS_CHANGE_MINUS_NO'),\n        pl: { type}\n    }\n}\n\nexport { addMyArmy, setMyArmy, UpdateHealth, encounterAddGroupMember, encounterGroupUpdateMemberNo, encounterAddVs, encounterVSUpdateMemberNo};","import React from 'react'\n\nimport { Dialog } from '@material-ui/core'\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nexport default function Popup(props) {\n    return (\n        <Dialog onClose={props.close} aria-labelledby=\"simple-dialog-title\" open={props.open}>\n            {\n                (props.title)?\n                    <DialogTitle style={{textAlign:'center'}}>{props.title}</DialogTitle> :\n                    null\n            }\n            \n            {props.children}\n        </Dialog>\n    )\n}\n","import React ,{ useState } from 'react'\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { TextField } from '@material-ui/core';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SearchIcon from '@material-ui/icons/Search';\n\nexport default function Searchlist(props) {\n\n    const OGitems = props.items;\n    const [items, setitems] = useState(props.items);\n\n    const handleSearch = (e) => {\n        const cpy = OGitems;\n        const search = e.target.value;\n\n        if (search){\n            const filtered = cpy.filter( (item) => {\n                return item.name.toLowerCase().startsWith(search.toLowerCase());\n            } );\n            setitems(filtered);\n        } else {\n            setitems(cpy);\n        }\n    }\n\n    const handleCallback = ($item) => {\n        if (props.callback){\n            props.callback($item);\n        }\n    }\n\n\n    return (\n        <List>\n            <TextField\n                onChange={handleSearch}\n                placeholder='search'\n                InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"end\">\n                        <SearchIcon />\n                      </InputAdornment>\n                    ),\n                  }}\n            ></TextField>\n            { (items.length > 0)? ( items.map((item) => \n                <ListItem button \n                    value={{retData:item.id}}\n                    onClick={()=> {handleCallback(item)}}\n                    key={item.id}>{item.name}</ListItem>\n            ) ) : ( OGitems.map((item) => \n                <ListItem button \n                    value={item.id}\n                    onClick={()=> {handleCallback(item)}}\n                    key={item.id}>{item.name}</ListItem>\n            ) )}\n        </List> \n    )\n}\n","import React from 'react'\n\nimport './../../assets/css/monster.min.css'\n\nexport default function simple(props) {\n    \n    const char  = props.char;\n\n    const getAttrValue = ($x)=> {\n        var v = Math.floor(($x - 10)/2)\n        return (v > 0)?'+'+v: v;\n    }\n\n    return (\n        <div className=\"simpleCharSheet\">\n            <div className=\"attrBlock\">\n                <ul className=\"attrList\">\n                    {Object.entries(char.ability_score).map(([key,value])=> \n                        <li key={key}>\n                            <div>{key}</div>\n                            <div>{getAttrValue(value)}</div>\n                        </li>\n                    )}\n                </ul>\n            </div>\n            <div className=\"infoBlock\">\n                <div className=\"name\">{char.name}</div>\n                <div class=\"typeBlock\">\n                    {char.size} {char.type}, {char.align}\n                </div>\n                <div class=\"statBlock\">\n                    <table>\n                        <tr>\n                            <td>HP</td>\n                            <td>{char.hp}</td>\n                        </tr>\n                        <tr>\n                            <td>AC</td>\n                            <td>{char.ac}</td>    \n                        </tr>\n                        { \n                            (char.challenge)?\n                            <tr>\n                                <td>Challange</td>\n                                <td>{char.challenge}</td>    \n                            </tr>\n                            : null\n                        }\n                        <tr style={{borderBottom:'1px solid'}}>\n                            <td>Perception</td>\n                            <td>{char.perception}</td>\n                        </tr>\n                        <tr style={{borderBottom:'1px solid'}}>\n                            <td>Speed</td>\n                            <td>\n                                {Object.entries( char.speed ).map(([key,value])=> \n                                    <>{key} {value}ft.<br></br></>\n                                )}\n                            </td>\n                        </tr>\n                        { \n                            ( char.damage_resistance.resistant.length > 0 ) ?\n                                <tr style={{borderBottom:'1px solid'}}>\n                                    <td>Resistance</td>\n                                    <td>\n                                        { char.damage_resistance.resistant.map( (i) => \n                                            <>{i}<br></br></>\n                                        ) }\n                                    </td>\n                                </tr>\n                            : null\n                        }\n                        { \n                            ( char.damage_resistance.immunity.length > 0 || char.condition_immunity.length > 0 ) ?\n                                <tr style={{borderBottom:'1px solid'}}>\n                                    <td>Immunity</td>\n                                    <td>\n                                        { char.damage_resistance.immunity.map( (i) => \n                                            <>{i} damage<br></br></>\n                                        ) }\n                                        { char.condition_immunity.map( (i) => \n                                            <>{i} damage<br></br></>\n                                        ) }\n                                    </td>\n                                </tr>\n                            : null\n                        }\n                    </table>\n                    {\n                        (char.ability) ? \n                            <div style={{borderBottom:'1px solid'}}>\n                                <strong>Skills</strong>\n                                <p>\n                                    {Object.entries( char.ability ).map( ([key,value]) =>\n                                        <>  \n                                            <i>{key}</i> : {value}\n                                            <br></br>\n                                        </>\n                                    )}\n                                </p>\n                            </div> \n                            :null\n                    }\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React, { useState } from 'react'\nimport {useDispatch } from 'react-redux';\n\nimport { UpdateHealth } from './../../../redux/actions/tools';\n\nimport { ButtonGroup, Button, ListItemText, ListItem } from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\n\n\n\nexport default function MyArmyListItem(props) {\n\n    const dispatch = useDispatch();\n\n    const data  = props.pdata;\n    const id    = data.id;\n    const name  = data.name;\n    const hp_max= data.hp.base;\n\n    const [hp,setHP] = useState(data.hp.curr);\n\n    const addHealth= () => {\n        dispatch(UpdateHealth(id,1));\n        setHP((hp+1))\n    }\n    const removeHealth= () => {\n        dispatch(UpdateHealth(id,0));\n        setHP((hp-1))\n    }\n\n    return (\n        <>\n        { (hp > 0)?\n            <ListItem key={props.key}>\n                \n                <ListItemText primary={name} />\n                <ButtonGroup>\n                    <Button onClick={removeHealth}>-</Button>\n                    <Button ><FavoriteIcon /> {hp}</Button>\n                    <Button disabled={(hp_max === hp)?'disabled':''} onClick={addHealth}>+</Button>\n                </ButtonGroup>\n                \n            </ListItem>:null\n        }\n        </>\n    )\n}\n","import React from 'react'\n\nimport List from '@material-ui/core/List';\nimport { Divider } from '@material-ui/core';\n\nimport MyArmyListItem from './MyArmyListItem';\n\nexport default function MyArmyList(props) {\n\n    const list = props.alist;\n\n    return (\n        <>\n            {list.map((item) => \n                <>\n                    <MyArmyListItem key={item.id} pdata={item} ></MyArmyListItem>\n                    <Divider />\n                </>\n            )}\n        </>\n    )\n}\n","export default class dice{\n    \n    constructor () {}\n\n    rollSavingThrow($st,$obj,$mod=0){\n        var bonus =  ( typeof $obj.saving_throw[$st] !== 'undefined')? $obj.saving_throw[$st] : 0;\n        var attr  =  this.attrToBonus($obj.attr[$st]);\n        return this.rollWithMod((+bonus + +attr),$mod)\n    }\n\n    /**\n     * returns random number inbetween 1 and $roll\n     * \n     * @param int $roll \n     * @returns \n     */\n    rollDice($roll=20){ return 1 + Math.floor(Math.random()*$roll);}\n\n    rollHealth($str){ return this.rollDmg($str); }\n\n    rollDmg($str){\n        var dices = this.strToRoll($str)\n        var ret = 0;\n        for (let j = 0; j < dices.length; j++) { ret += this.rollDice(dices[j]); }\n        return ret + this.strToBonus($str);\n    }\n\n    rollToHit($bonus){\n        var roll = this.rollDice(20);\n        return (roll == 20) ? 'Nat 20' : ( roll + +$bonus );\n    }\n\n    rollWithMod($bonus,$mod){\n        var d = this.rollToHit($bonus);\n        var d2;\n        switch($mod){\n            case 1:\n                if (d === 'Nat 20') return d;\n                d2 = this.rollToHit($bonus);\n                if (d2 === 'Nat 20') return d;\n                return (d2 > d)? d2 : d;\n            case -1:\n                if (d === 'Nat 20') return this.rollToHit($bonus);\n                d2 = this.rollToHit($bonus);\n                if (d2 === 'Nat 20') return d;\n                return (d2 < d)? d2 : d;\n            default:\n                return d;\n        }\n    }\n\n    rollForAttack($obj,$mod){\n        var hit = this.rollWithMod($obj.bonus,$mod);\n        var dmg = this.rollDmg($obj.die);\n\n        if (hit == 'Nat 20') dmg = dmg*2\n\n        return [ hit, dmg ];\n    }\n\n    getMultieAttackLowRoll($param,$defaultAttack = 0){\n        var r = 0;\n        for (let i = 0; i < $param.attacks[$defaultAttack].length; i++) {\n            const e = $param.attacks[$defaultAttack][i];\n            if (!e.damage) continue;\n            for (let j = 0; j < e.count; j++) {\n                r += this.getLowRoll(e.damage.damage);\n            }\n        }\n        return r;\n    }\n\n    getMultieAttackHighRoll($param,$defaultAttack = 0){\n        var r = 0;\n        for (let i = 0; i < $param.attacks[$defaultAttack].length; i++) {\n            const e = $param.attacks[$defaultAttack][i];\n            if (!e.damage) continue;\n            for (let j = 0; j < e.count; j++) {\n                r += this.getHighRoll(e.damage.damage);\n            }\n        }\n        return r;\n    }\n\n    getLowRoll($param){ return this.strToRoll($param).length + +this.strToBonus($param); }\n\n    getHighRoll($param){\n        var dice    = this.strToRoll($param)\n        var ret     = this.strToBonus($param);\n        for (let i = 0; i < dice.length; i++) {\n            ret += +dice[i];\n        }\n        return ret;\n    }\n\n    AttackToFriendly($param){\n        return {\n            name: $param.name,\n            die: $param.damage.damage,\n            bonus:$param.damage.roll_bonus,\n            type: $param.damage.type\n        }\n    }\n\n    /**\n     * converts multieattack object into usable damage str and roll bonus [ { die:1d6, bonus:2 }, ]\n     * \n     * @param object $param \n     */\n    multieAttackToFriendly($param){\n        var ret = [];\n        for (let j = 0; j < $param.length; j++) {\n            const e = $param[j];\n            \n            for (let i = 0; i < e.count; i++) {\n                ret.push(this.AttackToFriendly(e));\n            }\n        }\n        return ret;\n    }\n\n    /**\n     * returns the roll bonus from passed string e.g. '1d4+2' returns 2\n     * \n     * @param string $str \n     */\n    strToBonus($str){\n        var minus = 0;\n        var plus  = 0;\n\n        if ($str) {\n\n            if ($str.search('-') > 0){ \n                $str = ($str.split('-'));\n                minus = $str[1]; \n                $str = $str[0];\n            };\n            \n            var r = $str.split('+');\n            for (let index = 0; index < r.length; index++) {\n                const e = r[index];\n                if (e.indexOf('d') < 0) plus += +e;\n            }\n        \n        }\n\n        return (plus - minus);\n    }\n\n    /**\n     * returns the dice roll from passed string e.g. '2d4+2' returns [4,4]\n     * \n     * @param string $str \n     */\n    strToRoll($str){\n\n        var d = [];\n\n        if ($str) {\n        \n            if ($str.search('-') > 0) $str = ($str.split('-'))[0];\n\n            var r = $str.split('+');\n            for (let index = 0; index < r.length; index++) {\n                const e = r[index];\n                if (e.indexOf('d') > 0) {\n                    var die = e.split('d');\n                    for (let j = 0; j < die[0]; j++) {\n                        d.push(die[1]);\n                    }\n                }\n            }\n        }\n        \n        return d;\n    }\n\n    attrToBonus($x){\n        return Math.floor(($x-10)/2);\n    }\n}","import React, { useState, useRef } from 'react'\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { Divider, Button, Select, InputLabel, List, FormControl,  MenuItem, ListItem, ListItemText } from '@material-ui/core'\nimport ColorizeIcon from '@material-ui/icons/Colorize';\nimport CasinoIcon from '@material-ui/icons/Casino';\nimport SubdirectoryArrowRightIcon from '@material-ui/icons/SubdirectoryArrowRight';\nimport PriorityHighIcon from '@material-ui/icons/PriorityHigh';\n\nimport Popup from '../../../components/Popup';\nimport dice from '../../../components/dice';\n\nexport default function MyArmyFooter() {\n\n    const army = useSelector(state => state.tools.myarmy);\n\n    const rollAllRoll = useRef();\n    const rollAllMod  = useRef();\n\n    const [pop,setpop] = useState(0);\n    const [rolled,setRolled] = useState([]);\n\n    const die = new dice();\n\n    const handleRollAll = () => {\n        var roll = rollAllRoll.current.value;\n        var mod = rollAllMod.current.value;\n        var r = [];\n        for (let i = 0; i < army.length; i++) {\n            const e = army[i];\n            var name = e.name, hit=[],showDmg=0;\n            switch(roll){\n                case 1:\n                    showDmg = 1;\n                    for (let j = 0; j < e.selected.length; j++) {\n                        var attk = die.rollForAttack( e.selected[j],mod)\n                        hit.push({\n                            name: e.selected[j].name,\n                            type: e.selected[j].type,\n                            hit : attk[0],\n                            dmg : attk[1]\n                        });\n                    }\n                    break;\n                default:\n                    hit = die.rollSavingThrow(roll,e,mod);\n                    console.log(hit);\n                    break;\n            }\n            r.push({name,hit});\n        }\n        setRolled(r);\n        setpop(1);\n    }\n\n    const handleClosePop = () => {\n        setpop(0);\n    }\n\n\n    return (\n        <div >\n            <Popup open={pop} close={handleClosePop} title='Rolled!!' style={{textAlign: \"center\", minWidth:'50%'}}>\n                <Divider></Divider>\n                <List  >\n                    {rolled.map((i)=>\n                        <>\n                        {\n                            (Array.isArray(i.hit))?\n                            <>\n                                <ListItem style={{minWidth:'300px'}}>\n                                    <ListItemText >{i.name}</ListItemText>\n                                </ListItem>\n                                {i.hit.map((j)=> \n                                    <ListItem style={{display:'flex'}}>\n                                        <SubdirectoryArrowRightIcon />\n                                        <div style={{marginRight:'auto'}}>{j.name}</div>\n                                        {(j.hit == 'Nat 20')?<><PriorityHighIcon/>20</>:<><CasinoIcon/>{j.hit}</>} <ColorizeIcon style={{marginLeft:'1em'}}/>{j.dmg}\n                                    </ListItem>\n                                )} </>:\n                                <ListItem style={{minWidth:'300px'}}>\n                                    <div style={{marginRight:'auto'}}>\n                                        <ListItemText >{i.name}</ListItemText>\n                                    </div>\n                                    {(i.hit == 'Nat 20')?<><PriorityHighIcon/>20</>:<><CasinoIcon/>{i.hit}</>}\n                                </ListItem>\n                        }\n                            <Divider></Divider>\n                        </>\n                    )}\n                </List >\n            </Popup>\n            <div style={{\n                bottom:'1em',\n                position:\"fixed\",\n                left:'1em',\n                right:'1em',\n            }} className='container'>\n                <hr></hr>\n                <div style={{display:'flex',}} >\n                    <FormControl fullWidth sx={{ m: 1}} >\n                        <InputLabel id=\"roll_choose_select\">Roll</InputLabel>\n                        <Select labelId='roll_choose_select' defaultValue={1} inputRef={rollAllRoll}>\n                            <MenuItem value={1}>Attack</MenuItem>\n                            <MenuItem value={'STR'}>STR Saving Throw</MenuItem>\n                            <MenuItem value={'DEX'}>DEX Saving Throw</MenuItem>\n                            <MenuItem value={'CON'}>CON Saving Throw</MenuItem>\n                            <MenuItem value={'INT'}>INT Saving Throw</MenuItem>\n                            <MenuItem value={'WIS'}>WIS Saving Throw</MenuItem>\n                            <MenuItem value={'CHA'}>CHA Saving Throw</MenuItem>\n                        </Select>\n                    </FormControl>\n                    <FormControl fullWidth sx={{ m: 1}}>\n                        <InputLabel id=\"roll_adv_select\">Mod</InputLabel>\n                        <Select labelId='roll_adv_select' defaultValue={0} inputRef={rollAllMod}>\n                            <MenuItem value={0}>None</MenuItem>\n                            <MenuItem value={1}>Advantage</MenuItem>\n                            <MenuItem value={-1}>Disadvantage</MenuItem>\n                        </Select>\n                    </FormControl>\n                </div>\n                <Button fullWidth variant=\"contained\" color='primary' onClick={handleRollAll}>Roll</Button>\n            </div>\n        </div>\n    )\n}\n","\nexport default class api {\n\n    link;\n    params = {\n        mode: 'cors',\n    };\n    base = 'http://api.yaboilulu.co.uk/dnd/'\n\n    constructor($link,$payload=null)\n    {\n        this.link  = this.connectString($link, $payload); \n        \n    }\n\n    /**\n     * \n     * @param function $callback \n     */\n    get($callback)\n    {\n        fetch( this.link, this.params )\n            .then(function(response){\n                \n                return response.json().then(function(responseJson) {\n                    if (!responseJson.eno){\n                        $callback(responseJson);\n                    } else {\n                        console.log(responseJson);\n                    }\n                });\n            });\n    }\n\n    \n\n    connectString($link, $pl){\n        if ($link.includes(this.base)){\n            return $link + (this.strParams($pl));\n        }\n        return this.base + $link + (this.strParams($pl));\n    }\n\n    strParams($params){\n        if ($params){\n            var base = '?';\n            for (const [key, value] of Object.entries($params)) {\n                base += key+'='+value+'&';\n            }\n            base.slice(0, -1);\n            return base;\n        }\n        return '';\n    }\n}\n\n\n","import React, { useState, useRef } from 'react'\nimport uuid from 'react-uuid'\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addMyArmy } from './../../../redux/actions/tools';\n\nimport { Button, Select, InputLabel, Input, FormControl, ButtonGroup, Tooltip, Fab, MenuItem , List, ListItemText, ListItem, Divider} from '@material-ui/core'\n\nimport AddBox from '@material-ui/icons/AddBox';\n\nimport CasinoIcon from '@material-ui/icons/Casino';\nimport ColorizeIcon from '@material-ui/icons/Colorize';\n\nimport Popup from '../../../components/Popup';\nimport Searchlist from '../../../components/Searchlist';\nimport SimpleCharSheet from '../../../components/chasheet/Simple';\nimport MyArmyList from './MyArmyList';\nimport MyArmyFooter from './MyArmyFooter';\n\nimport api from '../../../components/api/fetch';\nimport dice from '../../../components/dice';\n\n\n\nexport default function MyArmy() {\n\n    const actionSelect = useRef();\n    const dispatch = useDispatch();\n\n    const tools = useSelector(state => state.tools);\n\n    const [showPop, setShowPop] = useState(0);\n    const [showMPop, setShowMPop] = useState(0);\n\n    const [montsers, setmonters] = useState([]);\n\n    const [char, setchar] = useState([]);\n\n    const die = new dice();\n\n    const getMonsters = () => {\n        new api('monsters/all',null).get(handlegetMonstersCallback);\n    }\n\n    const handlegetMonstersCallback = ($data) => {\n        setmonters($data);\n    }\n\n    const handleShowPop = () => {\n        getMonsters()\n        setShowPop(1);\n    }\n\n    const handleHidePop = () => {\n        setShowPop(0);\n    }\n\n    const handleHideMPop = () => {\n        setShowMPop(0);\n    }\n\n    const handleSearchCallback = ($item) => {\n        setShowPop(0);\n        new api(('monsters/'+$item.name),null).get(handleShowChar);\n    }\n\n    const handleShowChar = ($data) => {\n        setchar($data);\n        setShowMPop(1);\n    }\n\n    const handleHideChar = () => {\n        setShowMPop(0);\n    }\n\n    const handleBackToList = () => {\n        setShowMPop(0);\n        setShowPop(1);\n    }\n\n    const getCharAction = () => {\n        //calc multie attacks \n        var ret = [];\n        if (char.actions){\n            if (char.actions.multiattack){\n                var maid = 1;\n                var ma = char.actions.multiattack;\n                for (let i = 0; i < ma.length; i++) {\n                    const e = ma[i];\n                    var mas = die.multieAttackToFriendly(e.attacks[0]);\n                    var low = 0;\n                    var high = 0;\n                    for (let k = 0; k < mas.length; k++) {\n                        low += die.getLowRoll(mas[k].die);\n                        high += die.getHighRoll(mas[k].die);\n                    }\n                    ret.push({\n                        id:(ret.length + +1),\n                        name: 'Multie Attack '+ maid,\n                        dmg: low + ' - ' + high,\n                    });\n                    maid++;\n                }\n            }   \n            if (char.actions){\n                var a = char.actions.action;\n                for (let i = 0; i < a.length; i++) {\n                    if (a[i].damage.damage) ret.push({\n                        id:(ret.length + +1),\n                        name:a[i].name,\n                        dmg: die.getLowRoll(a[i].damage.damage) + ' - ' + die.getHighRoll(a[i].damage.damage),\n                    })\n                }\n            }\n    \n        }\n        \n        return ret;\n    }\n\n    const handleAddChar = () => {\n        var as = actionSelect.current.value;\n        if (as.search('Multie Attack') != -1){\n            var ind = parseInt(as.split('Multie Attack ')[1]) - 1;\n            var ma = char.actions.multiattack[ind];\n            var selected = die.multieAttackToFriendly(ma.attacks[0]).filter( (item)=> item.die )\n        } else {\n            var selected = die.AttackToFriendly(char.actions.action.filter((item)=> item.name == as)[0]);\n        }\n\n        var hp_base = die.rollHealth(char.hp);\n\n        dispatch(addMyArmy(\n            {\n                id: uuid(),\n                name: char.name,\n                hp: {\n                    die : char.hp,\n                    base: hp_base,\n                    curr: hp_base\n                },\n                ac: char.ac,\n                saving_throw: char.saving_throw,\n                attr: char.ability_score,\n                speed: char.speed,\n                selected: selected,\n            }\n        ));\n\n        setShowMPop(0);\n        setShowPop(0);\n    }\n\n    return (\n        <div className=\"mt-3\">\n            <Popup open={showPop} close={handleHidePop} title='Add To Army'>\n                <Searchlist callback={handleSearchCallback} items={montsers}></Searchlist>\n            </Popup>\n            <Popup open={showMPop} close={handleHideChar} >\n                {(char)? <SimpleCharSheet char={char} ></SimpleCharSheet> : null}\n                <br></br>\n                <FormControl  >\n                    <InputLabel htmlFor=\"age-native-simple\">Default Action</InputLabel>\n                    <Select\n                        inputProps={{\n                            name: 'Default Action',\n                            id: 'age-native-simple',\n                        }}\n                        placeholder=\"Select Default Action\"\n                        inputRef={actionSelect}\n                        defaultValue={(getCharAction().length > 0)?getCharAction()[0].name:0}\n                    >\n                        {getCharAction().map( (i) => \n                            <option key={i.id} value={i.name} >\n                                {i.name} ( {i.dmg}  Damage)\n                            </option>\n                        )}\n                    \n                    </Select>\n                </FormControl>\n                <ButtonGroup fullWidth>\n                    <Button onClick={handleBackToList}>Back</Button>\n                    <Button onClick={handleAddChar} variant=\"contained\" color='primary' >Add</Button>\n                </ButtonGroup>\n            </Popup>\n            <List>\n            {\n                (tools.myarmy) ?\n                    <MyArmyList alist={tools.myarmy}></MyArmyList>\n                    :null\n            }\n            \n                <ListItem>\n                    <Button\n                                        size='small'\n                                        fullWidth\n                                        onClick={handleShowPop}\n                                    ><AddBox/></Button>\n                    <Divider />\n                </ListItem>\n            </List>\n            <MyArmyFooter ></MyArmyFooter>\n        </div>\n    )\n}\n","import React ,{ useState } from 'react'\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { TextField } from '@material-ui/core';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SearchIcon from '@material-ui/icons/Search';\n\nexport default function ReverseSearch(props) {\n\n    const OGitems = props.items;\n    const [items, setitems] = useState(props.items);\n\n    const handleSearch = (e) => {\n        const cpy = OGitems;\n        const search = e.target.value;\n\n        if (search){\n            const filtered = cpy.filter( (item) => {\n                return item.name.toLowerCase().startsWith(search.toLowerCase());\n            } );\n            setitems(filtered);\n        } else {\n            setitems([]);\n        }\n    }\n\n    const handleCallback = ($item) => {\n        if (props.callback){\n            props.callback($item);\n        }\n    }\n\n\n    return (\n        <List fullWidth style={{width:'100%'}}>\n            <TextField\n                onChange={handleSearch}\n                placeholder='search'\n                InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"end\">\n                        <SearchIcon />\n                      </InputAdornment>\n                    ),\n                  }}\n                  fullWidth\n            ></TextField>\n            { (items.length > 0)? ( items.map((item) => \n                <ListItem button \n                    value={{retData:item.id}}\n                    onClick={()=> {handleCallback(item)}}\n                    key={item.id}>{item.name}</ListItem>\n            ) ) : null}\n        </List> \n    )\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { TableRow, TableCell, ButtonGroup, Button } from '@material-ui/core'\nimport { useState } from 'react';\n\nimport {encounterGroupUpdateMemberNo} from './../../../redux/actions/tools';\n\nexport default function GroupItem(props) {\n\n    const dispatch = useDispatch();\n\n    const item = props.item;\n\n    const minusNo = () => {\n        dispatch(encounterGroupUpdateMemberNo(item.type,item.level, 0));\n    }\n    const plusNo = () => {\n        dispatch(encounterGroupUpdateMemberNo(item.type,item.level, 1));\n    }\n\n    return (\n        <TableRow>\n            <TableCell>\n                <ButtonGroup size='small'>\n                    <Button onClick={minusNo}>-</Button>\n                    <Button>{item.no}</Button>\n                    <Button onClick={plusNo}>+</Button>\n                </ButtonGroup>\n            </TableCell>\n            <TableCell>{(item.level)?<>lv. {item.level}</>:null} {item.type}'s</TableCell>\n            <TableCell>{item.cr*100}</TableCell>\n        </TableRow>\n    )\n}\n","import React, {useState, useRef} from 'react'\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport Popup from '../../../components/Popup';\nimport ReverseSearch from './../../../components/search/ReverseSearch';\nimport GroupItem from './GroupItem';\n\nimport { Button , Paper, Grid, Divider, List, ListItem, Accordion, AccordionSummary, \n        AccordionDetails, TextField, Table, TableBody, TableRow, TableCell, TableHead,\n        TableContainer } from '@material-ui/core'\nimport { ExpandMore, AddBox } from '@material-ui/icons';\n\nimport { FontAwesomeIcon }  from '@fortawesome/react-fontawesome'\nimport { faSkull }          from '@fortawesome/free-solid-svg-icons'\n\nimport {encounterAddGroupMember} from './../../../redux/actions/tools';\nimport api from './../../../components/api/fetch';\n\n\nexport default function Group() {\n\n    const dispatch = useDispatch();\n\n    const group = useSelector( state => state.tools.encounter.group );\n    const cr = useSelector( state => state.tools.encounter.group.cr );\n    const [pop,setpop] = useState(0);\n    const [npcBtn,setnpcBtn] = useState('true');\n    const [pets,setpets] = useState(0);\n\n    const closePop  = () => { setpop(0); }\n    const openPop   = () => { \n        setpop(1); \n        if (!pets) new api('/monsters/search?wildshape=1').get(setpets);\n    }\n\n    const addNoPlayer = useRef(0);\n    const AddLevel = useRef(0);\n\n    const handleNPCBtnCheck = () => {\n        if (addNoPlayer.current.value > 0 && AddLevel.current.value) setnpcBtn('')\n        else setnpcBtn('true');\n    }\n\n    const handleNPCBtn = () => {\n        dispatch(encounterAddGroupMember(\n            'player',\n            AddLevel.current.value,\n            addNoPlayer.current.value,\n            ((AddLevel.current.value/4)*addNoPlayer.current.value)\n        ));\n        AddLevel.current.value      = null;\n        addNoPlayer.current.value   = null;\n        closePop();\n    }\n\n    const handlePetsCallBack = ($item) => {\n        dispatch(encounterAddGroupMember( $item.name, 0,1,$item.data.cr));\n        closePop();\n    }\n\n    return (\n        <>\n            <h3 style={{margin:'0.5em'}}>Your Group</h3>\n            <Grid container className='encounter_group'>\n                <Grid item style={{padding:'1em', width:'calc(100% - 200px)'}} className='group' fullWidth>\n                    <TableContainer >\n                        <Table aria-label=\"simple table\">\n                            <TableHead>\n                                <TableCell>No. of</TableCell>\n                                <TableCell>Players</TableCell>\n                                <TableCell><FontAwesomeIcon icon={faSkull} /></TableCell>\n                            </TableHead>\n                            <TableBody>\n                                { group.list.map((l,index)=> <GroupItem key={index} li={index} item={l} /> )}\n                                <TableRow >\n                                    <TableCell colSpan='3'  style={{padding:0}}>\n                                    <Button\n                                        size='small'\n                                        fullWidth\n                                        onClick={openPop}\n                                    ><AddBox/></Button>\n                                    </TableCell>\n                                </TableRow>\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                </Grid>\n                <Grid item zeroMinWidth>\n                    <Paper style={{padding:'1em', maxWidth:'200px'}} className='budget'>\n                        <strong>Budget</strong><br/>\n                        <table>\n                            <tr>\n                                <td>Easy:</td>\n                                <td><FontAwesomeIcon icon={faSkull} style={{paddingRight:'0.1em', marginRight:'0.1em'}} />{Math.floor((group.cr/2)*100)} </td>\n                                \n                            </tr>\n                            <tr>\n                                <td>Medium:</td>\n                                <td><FontAwesomeIcon icon={faSkull} style={{paddingRight:'0.1em', marginRight:'0.1em'}}/>{(group.cr)*100}</td>\n                                \n                            </tr>\n                            <tr>\n                                <td>Hard:</td>\n                                <td><FontAwesomeIcon icon={faSkull} style={{paddingRight:'0.1em', marginRight:'0.1em'}}/>{(group.cr*2)*100}</td>\n                                \n                            </tr>\n                            <tr>\n                                <td>Deadly:</td>\n                                <td><FontAwesomeIcon icon={faSkull} style={{paddingRight:'0.1em', marginRight:'0.1em'}}/>{(group.cr*3)*100}</td>\n                            </tr>\n                        </table>\n                    </Paper>\n                </Grid>\n            </Grid>\n            \n            <Popup open={pop} close={closePop} title='Add To Group'>\n                <Divider/>\n                <Accordion>\n                    <AccordionSummary expandIcon={<ExpandMore />}>Player/NPC</AccordionSummary>\n                    <AccordionDetails>\n                        <TextField onChange={handleNPCBtnCheck} inputRef={addNoPlayer} placeholder='No. Players' type='number' size='small'/>\n                        <TextField onChange={handleNPCBtnCheck} inputRef={AddLevel} placeholder='At Level' type='number' size='small' style={{marginLeft:'0.5em'}}/>\n                        <Button \n                            variant=\"contained\" color=\"primary\"\n                            style={{marginLeft:'0.5em'}}\n                            size='small'\n                            disabled={npcBtn}\n                            onClick={handleNPCBtn}\n                        >\n                            Add\n                        </Button>\n                    </AccordionDetails>\n                </Accordion>\n                <Accordion>\n                    <AccordionSummary expandIcon={<ExpandMore />}>Pets</AccordionSummary>\n                    <AccordionDetails fullWidth>\n                        <ReverseSearch items={pets} callback={handlePetsCallBack} fullWidth />\n                    </AccordionDetails >\n                </Accordion>\n            </Popup>\n        </>\n    )\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { TableRow, TableCell, ButtonGroup, Button } from '@material-ui/core'\nimport { useState } from 'react';\n\nimport {encounterVSUpdateMemberNo} from '../../../redux/actions/tools';\n\nexport default function VsItem(props) {\n\n    const dispatch = useDispatch();\n\n    const item = props.item;\n\n    const minusNo = () => {\n        dispatch(encounterVSUpdateMemberNo(item.type, 0));\n    }\n    const plusNo = () => {\n        dispatch(encounterVSUpdateMemberNo(item.type, 1));\n    }\n\n    return (\n        <TableRow>\n            <TableCell>\n                <ButtonGroup size='small'>\n                    <Button onClick={minusNo}>-</Button>\n                    <Button>{item.no}</Button>\n                    <Button onClick={plusNo}>+</Button>\n                </ButtonGroup>\n            </TableCell>\n            <TableCell>{item.type}'s</TableCell>\n            <TableCell>{item.cr*100}</TableCell>\n        </TableRow>\n    )\n}\n","import React, { useState, useRef, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport VsItem from './VsItem';\n\nimport { Button , Divider,  TextField, Table, TableBody, TableRow, TableCell, TableHead, TableContainer } from '@material-ui/core'\n\nimport { FontAwesomeIcon }  from '@fortawesome/react-fontawesome'\nimport { faSkull }          from '@fortawesome/free-solid-svg-icons'\n\nexport default function VsList() {\n    const dispatch = useDispatch();\n\n    const vs = useSelector( state => state.tools.encounter.vs );\n    const gcr = useSelector( state => state.tools.encounter.group.cr );\n    const vcr = useSelector( state => state.tools.encounter.vs.cr );\n\n    const [difficulty, setdifficulty] = useState();\n\n    useEffect(() => {\n        updateDifficulty()\n    }, [vcr,gcr]);\n\n    const updateDifficulty = () => {\n        switch (true){\n            case (vcr < (gcr)):\n                setdifficulty('Easy')\n                break;\n            case (vcr < (gcr*2)):\n                setdifficulty('Medium')\n                break;\n            case (vcr < (gcr*3)):\n                setdifficulty('Hard')\n                break;\n            case (vcr < (gcr*4)):\n                setdifficulty('Deadly')\n                break;\n            default:\n                setdifficulty('Impossible');\n                break;\n        }\n    }\n\n    if (!difficulty) updateDifficulty();\n\n    return (\n        <div>\n            {(vs.list.length>0) ?\n                <>\n                    <h3 style={{margin:'0.5em'}}>Vs</h3>\n                    <Table>\n                        <TableHead>\n                            <TableCell>No. of</TableCell>\n                            <TableCell>Enemy</TableCell>\n                            <TableCell><FontAwesomeIcon icon={faSkull} /></TableCell>\n                        </TableHead>\n                        <TableBody>\n                            {vs.list.map((v) => <VsItem item={v} /> )}\n                            <TableRow>\n                                <TableCell></TableCell>\n                                <TableCell>Total:</TableCell>\n                                <TableCell>{vcr*100}</TableCell>\n                            </TableRow>\n                        </TableBody>\n                    </Table>\n                    <div style={{marginTop:'0.5em'}}>\n                        Difficulty: {difficulty}\n                    </div>\n                </>\n                : <div style={{textAlign:'center'}}>Add Enemys From List</div>\n            }\n        </div>\n    )\n}\n","export default __webpack_public_path__ + \"static/media/monster_background.3b099245.jpg\";","import React from 'react'\n\nimport './../../assets/css/monster.min.css'\nimport BKimg from './../../assets/img/monster_background.jpg';\n\nimport { Divider, List, ListItem, ListItemSecondaryAction  } from '@material-ui/core';\nimport SecurityIcon from '@material-ui/icons/Security';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport DirectionsWalkIcon from '@material-ui/icons/DirectionsWalk';\n\nimport dice from './../dice';\n\nexport default function Simple(props) {\n    \n    const char  = props.char;\n    const die = new dice();\n\n    const getAttrValue = ($x)=> {\n        var v = Math.floor(($x - 10)/2)\n        return (v > 0)?'+'+v: v;\n    }\n\n    return (\n        <>\n        <div className=\"fullCharSheet\" style={{backgroundImage:`url(${BKimg})`}}>\n            <div className='top'>  \n                <div className='nameBlock'>\n                    <div className=\"name\">{char.name}</div>\n                    <div className=\"typeBlock\">\n                        {char.size} {char.type}, {char.align}\n                    </div>\n                </div>\n               \n                <div className=\"statBlock\">\n                        <div className='stat'>\n                            {char.hp}\n                            <div className='sicon'><FavoriteIcon /></div>\n                        </div>\n                        <div className='stat'>{char.ac}\n                            <div className='sicon'><SecurityIcon /></div>\n                        </div>\n                        <div className='stat'>\n                            {(char.speed['walk'])?char.speed['walk']:0}\n                            <div className='sicon'><DirectionsWalkIcon /></div>\n                        </div>\n                    </div>\n                \n            </div>\n            <div className='mid'>\n                <div className=\"attrBlock\">\n                    <ul className=\"attrList\">\n                        {Object.entries(char.ability_score).map(([key,value])=> \n                            <li key={key}>\n                                <div>{key}</div>\n                                <div>{getAttrValue(value)}</div>\n                                \n                            </li>\n                            \n                        )}\n                    </ul>\n                </div>\n                <div className=\"infoBlock\">\n                    <div>\n                        <table>\n                            { \n                                (char.challenge)?\n                                <tr>\n                                    <td>Challange</td>\n                                    <td>{char.challenge}</td>    \n                                </tr>\n                                : null\n                            }\n                            <tr >\n                                <td style={{paddingRight:'1em'}}>Passive Perception</td>\n                                <td>{char.perception}</td>\n                            </tr>\n                            { (Object.entries( char.speed  ).filter( ( [key, value] ) => key != 'walk' ).length > 0)?\n                                <tr >\n                                    <td>Other Movement</td>\n                                    <td>\n                                        {Object.entries( char.speed  ).filter( ( [key, value] ) => key != 'walk' ).map(([key,value])=> \n                                            <>{key} {value}ft.<br></br></>\n                                        )}\n                                    </td>\n                                </tr> : null\n                            }\n                            {\n                                (char.saving_throw.length > 0) ? \n                                    <tr>\n                                        <td>Saving Throws</td>\n                                        <td>\n                                            {Object.entries( char.saving_throw  ).map(([key,value]) => \n                                                <>{key}: +{value}<br></br></>\n                                            )}\n                                        </td>\n                                    </tr>\n                                :null\n                            }\n                            { \n                                ( char.damage_resistance.resistant.length > 0 ) ?\n                                    <tr >\n                                        <td>Resistance</td>\n                                        <td>\n                                            { char.damage_resistance.resistant.map( (i) => \n                                                <>{i}<br></br></>\n                                            ) }\n                                        </td>\n                                    </tr>\n                                : null\n                            }\n                            { \n                                ( char.damage_resistance.immunity.length > 0 || char.condition_immunity.length > 0 ) ?\n                                    <tr >\n                                        <td>Immunity</td>\n                                        <td>\n                                            { char.damage_resistance.immunity.map( (i) => \n                                                <>{i} damage<br></br></>\n                                            ) }\n                                            { char.condition_immunity.map( (i) => \n                                                <>{i} damage<br></br></>\n                                            ) }\n                                        </td>\n                                    </tr>\n                                : null\n                            }\n                        </table>\n                        {\n                            (char.ability.length > 0) ? \n                            <div className='abilities' >\n                                <Divider/>\n                                <strong>Abilities</strong>\n                                \n                                    \n                                    <p>\n                                        {Object.entries( char.ability ).map( ([key,value]) =>\n                                            <>  \n                                                <strong>{key}</strong> : {value}\n                                                <br></br>\n                                            </>\n                                        )}\n                                    </p>\n                                </div> \n                                :null\n                        }\n                        <div className='actionsBlock'>\n                            <Divider style={{marginBottom:'1em'}}/>\n                            <strong >Attacks</strong>\n                            <List>\n                                {char.actions.multiattack.map((m, index)=> \n                                    <ListItem>\n                                        Multiatack {index+1}\n                                        <ListItemSecondaryAction>\n                                            {die.getMultieAttackLowRoll(m)} - {die.getMultieAttackHighRoll(m)} Dmg\n                                        </ListItemSecondaryAction>\n                                    </ListItem>\n                                )}\n                                {char.actions.action.filter((i) => { return ( i.damage.damage )? true : false }).map((a)=> \n                                    <ListItem>\n                                        {a.name}\n                                        <ListItemSecondaryAction> {die.getLowRoll(a.damage.damage)} - {die.getHighRoll(a.damage.damage)} Dmg</ListItemSecondaryAction>\n                                    </ListItem>    \n                                )}\n                            </List>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        </>\n    )\n}\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux';\nimport { encounterAddVs } from './../../../redux/actions/tools';\n\nimport { Paper, List, ListItem, ListItemIcon, ListItemSecondaryAction, Divider, ButtonGroup, Button,TextField, InputAdornment } from '@material-ui/core'\nimport {ChevronLeft, ChevronRight, Search } from '@material-ui/icons/';\n\nimport api from '../../../components/api/fetch';\n\nimport Popup from './../../../components/Popup';\nimport BeastSimple from './../../../components/chasheet/BeastSimple';\n\nimport { FontAwesomeIcon }  from '@fortawesome/react-fontawesome'\nimport { faSkull }          from '@fortawesome/free-solid-svg-icons'\n\nexport default function ChooseList() {\n\n    const dispatch = useDispatch();\n\n    const gcr = useSelector( state => state.tools.encounter.group.cr );\n    const plimt = 10;\n\n    const [monsters, setMonsters] = useState();\n    const [monster, setMonster] = useState();\n    const [OGmonsters, setOGMonsters] = useState();\n    const [limit, setlimit] = useState(plimt);\n    const [mimit, setmimit] = useState(0);\n\n    const [pop,setpop] = useState(0);\n\n    const closePop = () =>{\n        setpop(0);\n        setMonster(0);\n    }\n    const openPop = () =>{\n        setpop(1);\n    }\n\n    const handleNextPage = () =>{\n        setmimit( limit );\n        setlimit( ( +limit + +plimt ) );\n    }\n    const handlePrevPage = () =>{\n        setmimit( (mimit - plimt) );\n        setlimit( ( +limit - +plimt ) );\n    }\n\n    const handleSearch = (e) => {\n        \n        var search = e.target.value;\n        var cpy = OGmonsters;\n        if (search){\n            cpy = cpy.filter( (item) => {\n                return item.name.toLowerCase().startsWith(search.toLowerCase());\n            } );\n            setmimit( 0 );\n            setlimit( plimt  );\n        }\n        setMonsters(cpy)\n    }\n\n    const handleSetMonsters = ($data) => {\n        setMonsters($data);\n        setOGMonsters($data)\n    }\n    \n    useEffect(() => {\n        new api('/monsters/search',{challenge:('lt'+(gcr*3)),ignorecrzero:1}).get(handleSetMonsters)\n    }, [gcr])\n\n    if(!monsters) new api('/monsters/search',{challenge:('lt'+(gcr*3)),ignorecrzero:1}).get(handleSetMonsters)\n\n    const showVs = ($name) => {\n        new api('monsters/'+$name).get(setMonster);\n        openPop();   \n    }\n\n    const handleAddMonster = () => {\n        dispatch(encounterAddVs(monster.name,1,monster.challenge));\n        setMonster(0);\n        closePop();\n    }\n\n    return (\n        <>\n            <h3 style={{margin:'0.5em'}}>From List</h3>\n            <Paper>\n                {(monsters)?\n                    <List>\n                        <TextField\n                            fullWidth   \n                            onChange={handleSearch}\n                            placeholder='search'\n                            InputProps={{\n                                startAdornment: (\n                                <InputAdornment position=\"end\">\n                                    <Search />\n                                </InputAdornment>\n                                ),\n                            }}\n                        ></TextField>\n                        { monsters.slice(mimit, limit).map( (m,index) =>\n                            <>\n                                <ListItem button key={m.id} onClick={()=>{showVs(m.name)}}>\n                                    {m.name}\n                                    <ListItemSecondaryAction>\n                                        <FontAwesomeIcon icon={faSkull} style={{paddingRight:'0.1em', marginRight:'0.1em'}} /> {m.data.cr*100}\n                                    </ListItemSecondaryAction>\n                                    \n                                </ListItem>\n                                <Divider />\n                            </>\n                        )}\n                        {(monsters.length > plimt)?\n                            <ListItem key='Buttons'>\n                                <ButtonGroup fullWidth>\n                                    <Button onClick={handlePrevPage} disabled={(mimit === 0)?'true':''}><ChevronLeft/></Button>\n                                    <Button onClick={handleNextPage}><ChevronRight/></Button>\n                                </ButtonGroup>\n                            </ListItem>:null\n                        }\n                        \n                    </List>\n                    :null\n                }\n            </Paper>\n            <Popup open={pop} close={closePop} title='Add Enemy'>\n                {(monster)?\n                    <BeastSimple char={monster}></BeastSimple>\n                :null}\n                <ButtonGroup variant=\"contained\" fullWidth>\n                    <Button onClick={closePop}>Close</Button>\n                    <Button color='primary' onClick={handleAddMonster} disabled={(!monster)?'true':''} >Add</Button>\n                </ButtonGroup>\n            </Popup>\n        </>\n    )\n}\n","import React, { useState, useRef } from 'react'\nimport { useSelector, useDispatch } from 'react-redux';\nimport uuid from 'react-uuid'\n\nimport './../../../assets/css/encounter.min.css';\n\nimport { Divider, Grid, Paper } from '@material-ui/core';\n\nimport Group from './Group';\nimport VsList from './VsList';\nimport ChooseList from './ChooseList';\n\nexport default function EncounterMaker() {\n\n    const gcr = useSelector( state => state.tools.encounter.group.cr );\n    \n    return (\n        <div className='encounterMaker'>\n            \n            <Group/>\n            <Divider/>\n            { (gcr > 0)? \n                <Grid container spacing={3} >\n                    <Grid item zeroMinWidth className={'fromList'}>\n                        <VsList></VsList>\n                    </Grid>\n                    <Grid item zeroMinWidth className={'chooseList'}>\n                        <ChooseList></ChooseList>\n                    </Grid>\n                </Grid> :\n               <div style={{textAlign:'center'}}>Add Group Member Above</div>\n            }\n        </div>\n    )\n}\n","import React from 'react'\n\nimport './../../assets/css/monster.min.css'\nimport BKimg from './../../assets/img/monster_background.jpg';\n\nimport { Divider, List, ListItem  } from '@material-ui/core';\nimport SecurityIcon from '@material-ui/icons/Security';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport DirectionsWalkIcon from '@material-ui/icons/DirectionsWalk';\n\nexport default function Full(props) {\n    \n    const char  = props.char;\n\n    const getAttrValue = ($x)=> {\n        var v = Math.floor(($x - 10)/2)\n        return (v > 0)?'+'+v: v;\n    }\n\n    return (\n        <>\n        <div className=\"fullCharSheet\" style={{backgroundImage:`url(${BKimg})`}}>\n            <div className='top'>  \n                <div className='nameBlock'>\n                    <div className=\"name\">{char.name}</div>\n                    <div className=\"typeBlock\">\n                        {char.size} {char.type}, {char.align}\n                    </div>\n                </div>\n               \n                <div className=\"statBlock\">\n                        <div className='stat'>\n                            {char.hp}\n                            <div className='sicon'><FavoriteIcon /></div>\n                        </div>\n                        <div className='stat'>{char.ac}\n                            <div className='sicon'><SecurityIcon /></div>\n                        </div>\n                        <div className='stat'>\n                            {(char.speed['walk'])?char.speed['walk']:0}\n                            <div className='sicon'><DirectionsWalkIcon /></div>\n                        </div>\n                    </div>\n                \n            </div>\n            <div className='mid'>\n                <div className=\"attrBlock\">\n                    <ul className=\"attrList\">\n                        {Object.entries(char.ability_score).map(([key,value])=> \n                            <li key={key}>\n                                <div>{key}</div>\n                                <div>{getAttrValue(value)}</div>\n                                \n                            </li>\n                            \n                        )}\n                    </ul>\n                </div>\n                <div className=\"infoBlock\">\n                    <div>\n                        <table>\n                            { \n                                (char.challenge)?\n                                <tr>\n                                    <td>Challange</td>\n                                    <td>{char.challenge}</td>    \n                                </tr>\n                                : null\n                            }\n                            <tr >\n                                <td style={{paddingRight:'1em'}}>Passive Perception</td>\n                                <td>{char.perception}</td>\n                            </tr>\n                            { (Object.entries( char.speed  ).filter( ( [key, value] ) => key != 'walk' ).length > 0)?\n                                <tr >\n                                    <td>Other Movement</td>\n                                    <td>\n                                        {Object.entries( char.speed  ).filter( ( [key, value] ) => key != 'walk' ).map(([key,value])=> \n                                            <>{key} {value}ft.<br></br></>\n                                        )}\n                                    </td>\n                                </tr> : null\n                            }\n                            {\n                                (char.saving_throw) ? \n                                    <tr>\n                                        <td>Saving Throws</td>\n                                        <td>\n                                            {Object.entries( char.saving_throw  ).map(([key,value]) => \n                                                <>{key}: +{value}<br></br></>\n                                            )}\n                                        </td>\n                                    </tr>\n                                :null\n                            }\n                            { \n                                ( char.damage_resistance.resistant.length > 0 ) ?\n                                    <tr >\n                                        <td>Resistance</td>\n                                        <td>\n                                            { char.damage_resistance.resistant.map( (i) => \n                                                <>{i}<br></br></>\n                                            ) }\n                                        </td>\n                                    </tr>\n                                : null\n                            }\n                            { \n                                ( char.damage_resistance.immunity.length > 0 || char.condition_immunity.length > 0 ) ?\n                                    <tr >\n                                        <td>Immunity</td>\n                                        <td>\n                                            { char.damage_resistance.immunity.map( (i) => \n                                                <>{i} damage<br></br></>\n                                            ) }\n                                            { char.condition_immunity.map( (i) => \n                                                <>{i} damage<br></br></>\n                                            ) }\n                                        </td>\n                                    </tr>\n                                : null\n                            }\n                        </table>\n                        {\n                            (char.ability) ? \n                            <div className='abilities' >\n                                <>Abilities</>\n                                <Divider/>\n                                    \n                                    <p>\n                                        {Object.entries( char.ability ).map( ([key,value]) =>\n                                            <>  \n                                                <>{key}</> : {value}\n                                                <br></br>\n                                            </>\n                                        )}\n                                    </p>\n                                </div> \n                                :null\n                        }\n                        <div className='actionsBlock'>\n                            <>Actions</>\n                            {\n                                (char.actions.multiattack)?\n                                    <div className='multiatack'>\n                                        <Divider/>\n                                        {char.actions.multiattack.map((m)=> \n                                            <>\n                                                <strong>Multiatack: </strong>{m.desc}<br></br>\n                                            </>\n                                        )}\n                                    </div>\n                                :null\n                            }\n                            {\n                                (char.actions.action)?\n                                    <div className='attack'>\n                                        <Divider/>\n                                        {\n                                            char.actions.action.map((a)=> \n                                                <>\n                                                    <strong>{a.name}: </strong>{a.desc}<br></br>\n                                                    <Divider/>\n                                                </>\n                                            )\n                                        }\n                                    </div>\n                                :null\n                            }\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        </>\n    )\n}\n","import React, {useState} from 'react'\n\nimport api from '../../../components/api/fetch';\n\nimport BeastFull from '../../../components/chasheet/BeastFull';\n\nexport default function Random() {\n\n    const [ws, setws] = useState(0);\n    const [loading,setLoading] = useState(0);\n\n    const getRandom = () => {\n        if (!loading){\n            new api('monsters/wildshape/random').get(handleRandomResponse);\n            setLoading(1);\n        }\n    }\n\n    const handleRandomResponse = ($data) => {\n        console.log($data);\n        if ($data){\n            setws($data)\n        }\n    }\n    if (!loading) getRandom();\n\n    return (\n        <div>\n            {(ws)?\n                <BeastFull char={ws}></BeastFull>\n                :null\n            }\n        </div>\n    )\n}\n","import React from 'react'\nimport { useParams } from 'react-router-dom';\n\nexport default function WildShape(props) {\n    let { search } = useParams();\n    \n    console.log(props);\n\n    return (\n        <div>\n            { search }\n        </div>\n    )\n}\n","import React, {useState} from 'react'\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport CharSheet from './../../components/chasheet/BeastFull';\n\nimport api from '../../components/api/fetch';\n\nexport default function Single(props) {\n\n    const history = useHistory();\n\n    let { monster } = useParams();\n    const [monsterData, setMonsterData] = useState();\n    const [loading,setLoading] = useState(0);\n\n    const getMonster = () => {\n        setLoading(1);\n        new api('/monsters/'+monster).get(handleMonsterData);\n    }\n\n    const handleMonsterData = ($data) => {\n        if (!Array.isArray($data)){\n            setMonsterData($data);\n            console.log(monsterData);\n        } else {\n            history.push('/monsters/all');\n        }\n    }\n\n    if (!loading) getMonster();\n\n    return (\n        <>\n            {(monsterData)?  <CharSheet char={monsterData}></CharSheet> : null}\n        </>\n       \n    )\n}\n","import React from 'react'\nimport { useHistory } from \"react-router-dom\";\n\nimport { ListItem, Divider} from '@material-ui/core';\n\nexport default function AllListItem(props) {\n\n    const monster = props.monster;\n\n    const history = useHistory();\n\n    const mdirect = () => {\n        history.push('/monsters/'+monster.name);\n    }\n\n\n    return (\n        <>\n            <ListItem button onClick={mdirect} >{monster.name}</ListItem>\n            <Divider />  \n        </>\n    )\n}\n","import React from 'react'\n\nimport Mli from './AllListItem';\n\nimport { List} from '@material-ui/core';\n\nexport default function AllList(props) {\n\n    const monsters = props.monsters;\n\n    return (\n        <List>\n            {monsters.map( (m) => <Mli key={m.id} monster={m} /> )}\n        </List>\n    )\n}\n","import React, { useState, useRef } from 'react'\n\nimport { TextField, Button, Divider, Accordion, AccordionSummary, AccordionDetails,\n        InputAdornment, Select, MenuItem } from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport SearchIcon  from '@material-ui/icons/Search';\n\nimport AllList from './components/AllList';\n\nimport API from './../../components/api/fetch';\n\nexport default function All() {\n\n    const [mall,setMall] = useState();\n    const [OGmall,setOGMall] = useState();\n    const [load,setload] = useState();\n\n    const sText = useRef();\n    const sSize = useRef();\n\n    const loadMall = () => {\n        setload(1)\n        new API('/monsters/all').get(handleMallData);\n    }\n\n    const handleMallData = ($data) => {\n        setMall($data);\n        setOGMall($data);\n    }\n\n    if (!load) loadMall();\n\n    const MonsterFilter = () =>{\n        var cpy = OGmall;\n        var text = sText.current.value;\n        cpy = cpy.filter( (i) => { return (i.name.search(text) > -1)?true:false });\n        setMall(cpy);\n    }\n\n    return (\n        <div>\n            <TextField\n                onChange={MonsterFilter}\n                inputRef={sText}\n                placeholder='search'\n                fullWidth\n                size='large'\n                style={{marginTop:'1em'}}\n                InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"end\">\n                        <SearchIcon />\n                      </InputAdornment>\n                    ),\n                  }}\n            ></TextField>\n            {(mall)? <AllList monsters={mall} /> : null}\n        </div>\n    )\n}\n","import { BrowserRouter as Router, Switch, Route, } from \"react-router-dom\";\n\nimport MyArmy from './pages/tools/myarmy/MyArmy';\nimport EncounterMaker from './pages/tools/encounter/EncounterMaker';\n\nimport DruidWildshapeRandom from './pages/class/druid/Random';\nimport DruidWildshape from './pages/class/druid/WildShape';\n\nimport Monster from './pages/monsters/Single';\nimport MonstersAll from './pages/monsters/All';\n\n\n\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/myarmy\" children={<MyArmy />} />\n        <Route path=\"/tools/encountermaker\" children={<EncounterMaker />} />\n\n\n        <Route path=\"/druid/wildshape/random\">\n          <DruidWildshapeRandom />\n        </Route>\n        <Route path=\"/druid/wildshape/:search\" children={<DruidWildshape />} />\n\n        <Route path=\"/monsters/all\"       children={<MonstersAll />} />\n        <Route path=\"/monsters/:monster\"  children={<Monster />} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport {  List, ListItem, Accordion, AccordionSummary, AccordionDetails, Divider } from '@material-ui/core';\nimport {Menu,ExpandMore} from '@material-ui/icons';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useHistory } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n    accordion : {\n        boxShadow: 'none',\n        border: '0px solid rgba(0, 0, 0, .125)',\n        width:'100%'\n    },\n    summary:{\n        padding:0,\n    },\n    desc:{\n        padding:0\n    }\n}))\n\n\n\nexport default function NavList(props) {\n\n    const classes = useStyles();\n    const links = props.links;\n    const history = useHistory();\n\n    const redirect = ($link) => {\n        console.log($link);\n        history.push($link);\n    }\n    return (\n        <List>\n            { Object.entries(links).map(([key,value])=>\n                    {return (typeof value === 'object')? \n                    <>\n                        <ListItem>\n                            <Accordion className={classes.accordion} >\n                                <AccordionSummary className={classes.summary}  expandIcon={<ExpandMore />}>{key}</AccordionSummary>\n                                <AccordionDetails className={classes.desc} >\n                                    <NavList links={value}/>\n                                </AccordionDetails>\n                            </Accordion>\n                            \n                        </ListItem>\n                        <Divider/>\n                    </>\n                        : <a href={value}><ListItem button>{key.replace('_',\" \")}</ListItem><Divider/></a>\n                    }\n                )\n            }\n        </List>\n    )\n}\n","import React, {useState} from 'react'\n\nimport { Toolbar, Typography, IconButton, SwipeableDrawer, List, ListItem, Accordion, AccordionSummary, AccordionDetails } from '@material-ui/core';\nimport {Menu,ExpandMore} from '@material-ui/icons';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Links from './links';\n\n\nimport NavList from './NavList';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n      },\n      drawerPaper: {\n        width: drawerWidth,\n      },\n}))\n\nexport default function NavMobile() {\n\n    \n    const links = Links();\n\n    const classes = useStyles();\n    const [drawer, setdrawer] = useState(false);\n    const toggleDrawer = () => { setdrawer(!drawer); }\n\n    return (\n        <Toolbar>            \n            <Typography variant=\"h6\" >\n                DnD Buddy\n            </Typography>\n            <IconButton edge=\"end\" style={{marginLeft:'auto'}} color=\"inherit\" aria-label=\"menu\" onClick={toggleDrawer}>\n                <Menu />\n            </IconButton>\n            <SwipeableDrawer\n                anchor={'right'}\n                open={drawer}\n                onClose={toggleDrawer}\n                className={classes.drawer}\n                classes={{\n                    paper: classes.drawerPaper,\n                  }}\n            >\n                {(links)?<NavList links={links}/>:null}\n            </SwipeableDrawer>\n        </Toolbar>\n    )\n}\n","export default function links (){\n    return {\n        Home:'/',\n        Class:{\n            Druid:{\n                Druid:'/class/druid',\n                Random_Wildshape: '/druid/wildshape/random',\n            }\n        },\n        Monsters:{\n            All:'/monsters/all',\n            Search:'/monsters/all'\n        },\n        Tools:{\n            MyArmy:\"/myarmy\",\n            Encounter_Maker:\"/tools/encountermaker\"\n        }\n    }\n}","import React, {useState} from 'react'\n\nimport { Toolbar, Typography, IconButton, SwipeableDrawer, List, ListItem, Accordion, AccordionSummary, AccordionDetails } from '@material-ui/core';\nimport {Menu,ExpandMore} from '@material-ui/icons';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Links from './links';\n\n\nimport NavList from './NavList';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n      },\n      drawerPaper: {\n        width: drawerWidth,\n      },\n}))\n\nexport default function NavWindow() {\n\n    \n    const links = Links();\n\n    const classes = useStyles();\n    const [drawer, setdrawer] = useState(false);\n    const toggleDrawer = () => { setdrawer(!drawer); }\n\n    return (\n        <Toolbar>            \n            <Typography variant=\"h6\" >\n                DnD Buddy\n            </Typography>\n            <IconButton edge=\"end\" style={{marginLeft:'auto'}} color=\"inherit\" aria-label=\"menu\" onClick={toggleDrawer}>\n                <Menu />\n            </IconButton>\n            <SwipeableDrawer\n                anchor={'right'}\n                open={drawer}\n                onClose={toggleDrawer}\n                className={classes.drawer}\n                classes={{\n                    paper: classes.drawerPaper,\n                  }}\n            >\n                {(links)?<NavList links={links}/>:null}\n            </SwipeableDrawer>\n        </Toolbar>\n    )\n}\n","import React, {useState, useEffect} from 'react'\nimport {\n    BrowserRouter as Router,\n    Link\n  } from \"react-router-dom\";\n\nimport { AppBar, Toolbar, Typography, Button, Accordion, IconButton } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nimport NavMobile from './NavMobile';\nimport NavWindow from './NavWindow';\n\nexport default function Nav() {\n    \n    const [width, setWidth] = useState(window.innerWidth);\n    const breakpoint = 960;\n\n    const handleWindowResize = () => {\n        setWidth(window.innerWidth);\n    }\n\n    useEffect(()=>{\n        window.addEventListener(\"resize\", handleWindowResize);\n    });\n\n    return (\n        <AppBar position=\"static\">\n            { (width > breakpoint)? <NavWindow /> : <NavMobile/> }\n        </AppBar>\n    )\n}\n","import { combineReducers } from 'redux'\n\nimport toolsReducer from './tools';\n\nconst allReducers  = combineReducers({\n    tools : toolsReducer,\n});\n\nexport default allReducers;","export default function toolsReducer(state={},action){\n    switch(action.type){\n        case 'ADD_MYARMY':\n            state.myarmy.push(action.pl);\n            return state;\n        case 'SET_MYARMY':\n            state.myarmy = action.pl;\n            return state;\n        case 'ARMY_IND_PLUS_HEALTH':\n            //get index\n            var army = state.myarmy;\n            var index;\n            for (let i = 0; i < army.length; i++) {\n                //army[i];\n                if (army[i].id == action.pl) index = i;\n            }\n            army[index].hp.curr++;\n            state.myarmy = army;\n            return state;\n        case 'ARMY_IND_MINUS_HEALTH':\n            //get index\n            var army = state.myarmy;\n            var index;\n            for (let i = 0; i < army.length; i++) {\n                //army[i];\n                if (army[i].id == action.pl) index = i;\n            }\n            army[index].hp.curr--;\n            state.myarmy = army.filter((i)=>{\n                return (i.hp.curr > 0)?true:false;\n            });\n            return state;\n        \n        //encounters\n        case 'ENCOUNTER_ADD_GROUP':\n            var groups = state.encounter.group.list;\n            var pl = action.pl;\n            var index = -1;\n            for (let i = 0; i < groups.length; i++) {\n                if (groups[i].type == pl.type && groups[i].level == pl.level) {index = i; break};\n            }\n            if (index === -1) state.encounter.group.list.push({\n                type:pl.type,\n                level:parseInt(pl.level),\n                no:parseInt(pl.no),\n                cr:pl.cr\n            })\n            else {\n                state.encounter.group.list[index].no = parseInt(+parseInt(state.encounter.group.list[index].no) + +parseInt(pl.no));\n                state.encounter.group.list[index].cr += pl.cr;\n            }\n            state.encounter.group.cr += pl.cr;\n            return state;\n        case 'ENCOUNTER_GROUP_CHANGE_ADD_NO':\n            var groups = state.encounter.group.list;\n            var pl = action.pl;\n            var crp=0.25;            \n            for (let i = 0; i < groups.length; i++) {\n                const e = groups[i];\n                if (e.type == pl.type && e.level == pl.level) {\n                    var crp = parseFloat((e.cr / e.no));\n                    state.encounter.group.list[i] = {\n                        type:e.type,\n                        level:pl.level,\n                        no:parseInt(+e.no + 1),\n                        cr:parseFloat(+e.cr + crp),\n                    }; \n                    state.encounter.group.cr += crp; \n                    break\n                };\n            }\n            return state;\n        case 'ENCOUNTER_GROUP_CHANGE_MINUS_NO':\n            var groups = state.encounter.group.list;\n            var pl = action.pl;\n            var crp=0.25;            \n            for (let i = 0; i < groups.length; i++) {\n                const e = groups[i];\n                if (e.type == pl.type && e.level == pl.level) {\n                    var crp = parseFloat((e.cr / e.no));\n                    if ((+e.no - 1) < 1 || e.no < 1){\n                        state.encounter.group.cr -= state.encounter.group.list[i].cr;\n                        state.encounter.group.list.splice(i,1);\n                        break;\n                    } \n                    state.encounter.group.list[i] = {\n                        type:e.type,\n                        level:pl.level,\n                        no:parseInt(+e.no - 1),\n                        cr:parseFloat(+e.cr - crp),\n                    }; \n                    state.encounter.group.cr -= crp; \n                    break\n                };\n            }\n            return state;\n        case 'ENCOUNTER_ADD_VS':\n            var groups = state.encounter.vs.list;\n            var pl = action.pl;\n            var index = -1;\n            for (let i = 0; i < groups.length; i++) {\n                if (groups[i].type == pl.type ) {index = i; break};\n            }\n            if (index === -1) state.encounter.vs.list.push({\n                type:pl.type,\n                no:parseInt(pl.no),\n                cr:pl.cr\n            })\n            else {\n                state.encounter.vs.list[index].no = parseInt(+parseInt(state.encounter.vs.list[index].no) + +parseInt(pl.no));\n                state.encounter.vs.list[index].cr += pl.cr;\n            }\n            state.encounter.vs.cr += pl.cr;\n            return state;\n        case 'ENCOUNTER_VS_CHANGE_ADD_NO':\n            var groups = state.encounter.vs.list;\n            var pl = action.pl;\n            var crp=0.25;            \n            for (let i = 0; i < groups.length; i++) {\n                const e = groups[i];\n                if (e.type == pl.type ) {\n                    var crp = parseFloat((e.cr / e.no));\n                    state.encounter.vs.list[i] = {\n                        type:e.type,\n                        no:parseInt(+e.no + 1),\n                        cr:parseFloat(+e.cr + crp),\n                    }; \n                    state.encounter.vs.cr += crp; \n                    break\n                };\n            }\n            return state;\n        case 'ENCOUNTER_VS_CHANGE_MINUS_NO':\n            var groups = state.encounter.vs.list;\n            var pl = action.pl;\n            var crp=0.25;            \n            for (let i = 0; i < groups.length; i++) {\n                const e = groups[i];\n                if (e.type == pl.type ) {\n                    var crp = parseFloat((e.cr / e.no));\n                    if ((+e.no - 1) < 1 || e.no < 1){\n                        state.encounter.vs.cr -= state.encounter.vs.list[i].cr;\n                        state.encounter.vs.list.splice(i,1);\n                        break;\n                    } \n                    state.encounter.vs.list[i] = {\n                        type:e.type,\n                        no:parseInt(+e.no - 1),\n                        cr:parseFloat(+e.cr - crp),\n                    }; \n                    state.encounter.vs.cr -= crp; \n                    break\n                };\n            }\n            return state;\n        default:\n            return state;\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from '@material-ui/styles';\n\nimport './index.css';\nimport './assets/css/styles.min.css';\nimport { createTheme } from '@material-ui/core/styles';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport Nav from './layout/Nav';\n\nimport { Provider } from 'react-redux';\nimport allReducers from './redux/reducers/index'\nimport {createStore} from \"redux\";\nimport reduxState from './redux/state';\n\n\nconst stateBase = new reduxState();\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#510208',\n    },\n    secondary: {\n      main: '#160900'\n    },\n  },\n});\n\nlet store = createStore(allReducers, \n    stateBase.persist(),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  );\n\nstore.subscribe(()=> { stateBase.setState(store.getState()) });\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <Provider store={store}>\n        <Nav />\n        <div class=\"container\">\n          <App />\n        </div>\n      </Provider>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","class state {\n    constructor (){}\n\n    key = 'DND_DATA';\n\n    resetSate(){\n        localStorage.setItem(this.key,JSON.stringify(this.defaultState()));\n    }\n\n    getState(){\n        return JSON.parse(localStorage.getItem(this.key));\n    }\n\n    setState($item){\n        localStorage.setItem(this.key,JSON.stringify($item));\n    }\n\n    persist() {\n        //this.resetSate();\n        return (localStorage.getItem(this.key)) ?\n            {...this.defaultState(),...this.getState()}:\n            this.defaultState();\n    }\n\n    defaultState() {\n        return {\n            tools: {\n                myarmy: [],\n                encounter:{\n                    group:{\n                        list:[],\n                        cr:0,\n                    },\n                    vs:{\n                        list:[],\n                        cr:0,\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport default state;"],"sourceRoot":""}